[role="xpack"]
[testenv="gold"]
[[monitoring-production]]
== Monitoring in a production environment

In production, you should send monitoring data to a separate _monitoring cluster_
so that historical data is available even when the nodes you are monitoring
are not. 

If you have the appropriate license, using a dedicated monitoring cluster also 
enables you to monitor multiple clusters from a central location.

To store monitoring data in a separate cluster:

. <<configuring-monitoring,Set up the {es} cluster you want to use for monitoring>>. 
For example, you might set up a two host cluster with the nodes `es-mon-1` and 
`es-mon-2`.
+
--
[IMPORTANT]
===============================
* To monitor an {es} 6.x cluster, you must run {es}
6.x on the monitoring cluster.
* There must be at least one <<ingest,ingest node>> in the monitoring
cluster; it does not need to be a dedicated ingest node.
===============================
--

. {kibana-ref}/monitoring-xpack-kibana.html[Configure {monitoring}] in {kib}.
+
--
NOTE: {kib} makes requests to the monitoring cluster as the logged in user.
The username and password credentials must therefore be valid on both the {kib}
server and the monitoring cluster.

--

. Create a user on the monitoring cluster that has the
`remote_monitoring_agent` role. These credentials will be used when
data is shipped from the {es} cluster you are monitoring to
your dedicated monitoring cluster. For example, the following request
creates a `remote_monitor` user that has the `remote_monitoring_agent` role:
+
--
[source, sh]
---------------------------------------------------------------
POST /_xpack/security/user/remote_monitor
{
  "password" : "changeme",
  "roles" : [ "remote_monitoring_agent"],
  "full_name" : "Internal Agent For Remote Monitoring"
}
---------------------------------------------------------------
// CONSOLE
//TEST[skip:license-requirements]
--

. Configure each {es} node in the cluster you are
monitoring to send metrics to your monitoring cluster by
configuring an HTTP exporter in the
`xpack.monitoring.exporters` settings in `elasticsearch.yml`.
+
--
[source,yaml]
--------------------------------------------------
xpack.monitoring.exporters:
  id1:
    type: http
    host: ["http://es-mon-1:9200", "http://es-mon2:9200"] <1>
    auth.username: remote_monitor <2>
    auth.password: changeme
--------------------------------------------------
<1> If SSL/TLS is enabled on the monitoring cluster, you must
connect through HTTPS.
<2> If {security} is disabled on the monitoring cluster, you can
omit `auth.username` and `auth.password`.
--

. If SSL/TLS is enabled on the monitoring cluster, specify the trusted
CA certificate(s) that will be used to verify the identity of the nodes
in the monitoring cluster.
+
--
To add a CA certificate to an {es} node's trusted certificates, you
can specify the location of the PEM encoded certificate with the
`certificate_authorities` setting:

[source,yaml]
--------------------------------------------------
xpack.monitoring.exporters:
  id1:
    type: http
    host: ["https://es-mon1:9200", "https://es-mon2:9200"]
    auth:
      username: agent-user
      password: password
    ssl:
      certificate_authorities: [ "/path/to/ca.crt" ]
--------------------------------------------------

Alternatively, you can configure trusted certificates using a truststore
(a Java Keystore file that contains the certificates):

[source,yaml]
--------------------------------------------------
xpack.monitoring.exporters:
  id1:
    type: http
    host: ["https://es-mon1:9200", "https://es-mon2:9200"]
    auth:
      username: remote_monitor
      password: changeme
    ssl:
      truststore.path: /path/to/file
      truststore.password: password
--------------------------------------------------

--

. Restart {es} on the nodes in your production cluster.
+
--
TIP: You may want to temporarily
<<modules-cluster,disable shard allocation>> before you restart your nodes to
avoid unnecessary shard reallocation during the install process.

--

. To verify your {monitoring} installation, point your web browser at your {kib}
host, and select **Monitoring** from the side navigation. When security is enabled,
to view the monitoring dashboards you must log in to {kib} as a user who has
both the `kibana_user` and `monitoring_user` roles. For example:
+
--
[source,js]
--------------------------------------------------
POST /_xpack/security/user/stack-monitor
{
  "password" : "changeme",
  "roles" : [ "kibana_user", "monitoring_user" ]
}
--------------------------------------------------
// CONSOLE
//TEST[skip:license-requirements]

//image:images/monitoring.jpg["Monitoring",link="images/monitoring.jpg"]
--
